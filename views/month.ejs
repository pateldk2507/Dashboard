<!DOCTYPE html>

<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title>Monthly calendar</title>
    <link rel="stylesheet" href="style.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Google Font Link for Icons -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200">
    <!-- <script src="script.js" defer></script> -->

    <style>
                    /* Import Google font - Poppins */
            @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
            *{
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
            }
            body{
            display: flex;
            align-items: center;
            padding: 0 10px;
            justify-content: center;
            /* min-height: 100vh; */
            background: black;
            color: wheat;
            }
            .wrapper{
            height: max-content;
            width: 100%;
            background: #000000;
            border-radius: 10px;
            box-shadow: 0 15px 40px rgba(0,0,0,0.12);
            color: white;
            }
            .wrapper header{
            display: flex;
            align-items: center;
            padding: 25px 30px 10px;
            justify-content: space-between;
            color: white;
            }
            header .icons{
            display: flex;
            }
            header .icons span{
            height: 38px;
            width: 38px;
            margin: 0 1px;
            cursor: pointer;
            color: #ffffff;
            text-align: center;
            line-height: 38px;
            font-size: 1.9rem;
            user-select: none;
            border-radius: 50%;
            }
            .icons span:last-child{
            margin-right: -10px;
            }
            header .icons span:hover{
            background: #f2f2f2;
            color: #000000;
            }
            header .current-date{
            font-size: 2rem;
            font-weight: 500;
            }
            .calendar{
            padding: 20px;
            }
            .calendar ul{
            display: flex;
            flex-wrap: wrap;
            list-style: none;
            text-align: center;
            }

            .calendar li{
            color: #333;
            width: calc(100% / 7);
            font-size: 1.07rem;
            }
            .calendar .weeks li{
            font-weight: 500;
            cursor: default;
            color: white;
            }
            li{
                height: 85px;
            }
            li > small{
                font-size: small;
            }
            .calendar .days li{
                z-index: 1;
                cursor: pointer;
                position: relative;
                /* margin-top: 45px; */
                height: 150px;
                padding-top: 9px;
                border: 1px solid #d1d1d1;
                color: white;
            }
            .days li.inactive{
            color: #aaa;
            }

            .days li::before{
            position: absolute;
            content: "";
            left: 50%;
            top: 50%;
            height: 40px;
            width: 40px;
            z-index: -1;
            border-radius: 50%;
            transform: translate(-50%, -50%);
            }

            ul.weeks > li {
                height: 45px;
            }
            span{
                font-size: small;
                margin: 0;
                width: 100px;
            }
            .jobcontent{
                font-size: small;
                width: 260px;
                float: left;
                overflow: hidden;
                height: 19px;
                font-family: Verdana, Geneva, Tahoma, sans-serif;
            }
            ::-webkit-scrollbar {
                width: 10px; 
            }            
            ::-webkit-scrollbar-track {
                background: #f1f1f1; 
            }
            ::-webkit-scrollbar-thumb {
                background: #5f6169; 
                border-radius: 0px; 
            }            
            ::-webkit-scrollbar-thumb:hover {
                background: #ccc; 
            }
            html {
                scroll-behavior: smooth; 
            }
            .allagent{
                background-color: brown;
                padding: 6px;
                border-radius: 10px;
                border: 1px solid;
                box-shadow: 1px 1px 20px 0px blue;
            }

            .weeks {
                background-color: chocolate;
                border: 1px solid;
            }
            .weeks> li {
                border: 1px solid;
                text-align: center;
                display: flex;
                align-items: center;
                justify-content: space-around;
            }

    </style>



  </head>
  <body>
    <div class="wrapper">
      <header>

        <div class="allagent">
            <input type="checkbox" checked name="Gerry" id="Gerry"> Gerry  &nbsp; &nbsp;
            <input type="checkbox" checked name="Troy" id="Troy"> Troy  &nbsp; &nbsp;
            <input type="checkbox" checked name="Esko" id="Esko"> Esko  &nbsp; &nbsp;
            <input type="checkbox" checked name="David" id="David"> David  &nbsp; &nbsp;
            <input type="checkbox" checked name="Chris" id="Chris"> Chris &nbsp; &nbsp;
            <input type="checkbox" checked name="Christy" id="Christy"> Christy &nbsp; &nbsp;
        </div>
        <p class="current-date"></p>
        <div class="icons">

            <span  style="width: 100px;
                    background-color: darkgoldenrod;
                    color: white;
                    border: 1px solid black;
                    border-radius: 6px;
                    font-size: 15px;"
                    id="prev"  
                    >
                    chevron_left
            </span> 

            <!-- class="material-symbols-rounded" -->
            <span style="width: 100px;
                    background-color: darkred;
                    color: white;
                    border: 1px solid black;
                    border-radius: 6px;
                    font-size: 15px;" 
                    id="next">
                    chevron_right
            </span> 


        </div>
      </header>
      <div class="calendar">
        <ul class="weeks">
          <li>Sunday</li>
          <li>Monday</li>
          <li>Tuesday</li>
          <li>Wednesday</li>
          <li>Thursday</li>
          <li>Friday</li>
          <li>Saturday</li>
        </ul>
        <ul class="days"></ul>
      </div>
    </div>
    <script>
        const daysTag = document.querySelector(".days"),
currentDate = document.querySelector(".current-date"),
prevNextIcon = document.querySelectorAll(".icons span");

var startdate,enddate;

// getting new date, current year and month
let date = new Date(),
currYear = date.getFullYear(),
currMonth = date.getMonth();

// storing full name of all months in array
const months = ["January", "February", "March", "April", "May", "June", "July",
              "August", "September", "October", "November", "December"];

var data='';

const renderCalendar = () => {
    let firstDayofMonth = new Date(currYear, currMonth, 1).getDay(), // getting first day of month
    lastDateofMonth = new Date(currYear, currMonth + 1, 0).getDate(), // getting last date of month
    lastDayofMonth = new Date(currYear, currMonth, lastDateofMonth).getDay(), // getting last day of month
    lastDateofLastMonth = new Date(currYear, currMonth, 0).getDate(); // getting last date of previous month



    let startday = (lastDateofLastMonth - firstDayofMonth) + 1 ;
    if(startday > 31 ){ startday = 1}      

    if(startday == 1) {
        startdate = currYear + "-" + (currMonth+1) + "-" + startday;
        // console.log("startdate" , startday , currMonth+1, currYear);
    }else{
        startdate = currYear + "-" + currMonth + "-" + startday;
        // console.log("startdate" , startday , currMonth, currYear);
    }

    let lastDate = 0;

    let liTag = "";

    for (let i = firstDayofMonth; i > 0; i--) { 

        var monthWithLeadingZero = currMonth < 10 ? "0" + currMonth : currMonth.toString();
        let a = lastDateofLastMonth - i + 1;
        var dayWithLeadingZero = a < 10 ? "0" + a : a.toString();
        var id = `M${currYear}-${(monthWithLeadingZero)}-${dayWithLeadingZero}`;
        liTag += `<li id=${id}> <b> ${a} </b> <br> <div class="jobcontent" id=${'24'+id} style="color:#FFD700">Gerry </div>  <div class="jobcontent" id=${'29'+id} style="color:#00BFFF "> Troy </div>  <div class="jobcontent" id=${'27'+id} style="color:#00FF00 "> Esko </div>  <div class="jobcontent" id=${'28'+id} style="color:orange"> David </div>  <div class="jobcontent" id=${'22'+id} style="color:#FF0000 "> Chris OG </div>  <div class="jobcontent" id=${'31'+id} style="color:#6495ED "> Christy </div>    `;
    }

    for (let i = 1; i <= lastDateofMonth; i++) { 

        let isToday = i === date.getDate() && currMonth === new Date().getMonth() 
                     && currYear === new Date().getFullYear() ? "active" : "";
        var monthWithLeadingZero = (currMonth+1) < 10 ? "0" + (currMonth+1) : (currMonth+1).toString();
        var dayWithLeadingZero = i < 10 ? "0" + i : i.toString();
        var id = `M${currYear}-${monthWithLeadingZero}-${dayWithLeadingZero}`;
        liTag += `<li id=${id}> <b> ${i} </b> <br> <div class="jobcontent" id=${'24'+id} style="color:#FFD700 ">Gerry </div>  <div class="jobcontent" id=${'29'+id} style="color:#00BFFF "> Troy </div>  <div class="jobcontent" id=${'27'+id} style="color:#00FF00 "> Esko </div>  <div class="jobcontent" id=${'28'+id} style="color:orange"> David </div>  <div class="jobcontent" id=${'22'+id} style="color:#FF0000 "> Chris OG </div>  <div class="jobcontent" id=${'31'+id} style="color:#6495ED "> Christy </div>   `;

            lastDate = i- lastDateofMonth + 1;
    }

    for (let i = lastDayofMonth; i < 6; i++) { 

        var monthWithLeadingZero = (currMonth+2) < 10 ? "0" + (currMonth+2) : (currMonth+2).toString();
        let a = i-lastDayofMonth+1;
        var dayWithLeadingZero = a < 10 ? "0" + a : a.toString();
        var id= `M${currYear}-${monthWithLeadingZero}-${dayWithLeadingZero}`;
        liTag += `<li id=${id}> <b>${a}</b> <br> <div class="jobcontent" id=${'24'+id} style="color:#FFD700 ">Gerry </div>  <div class="jobcontent" id=${'29'+id} style="color:#00BFFF "> Troy </div>  <div class="jobcontent" id=${'27'+id} style="color:#00FF00 "> Esko </div>  <div class="jobcontent" id=${'28'+id} style="color:orange"> David </div>  <div class="jobcontent" id=${'22'+id} style="color:#FF0000 "> Chris OG </div>  <div class="jobcontent" id=${'31'+id} style="color:#6495ED "> Christy </div>   `;

        lastDate = i- lastDayofMonth + 1;
    }
     if(lastDate >= 1){
        enddate = currYear + "-" + (currMonth+2) + "-" + lastDate;
        //  console.log("Last Date: ", lastDate , currMonth+2, currYear);
     }else{
        enddate = currYear + "-" + (currMonth+1) + "-" + lastDate;
        // console.log("Last Date: ", lastDate , currMonth+1, currYear);
     }
    currentDate.innerText = `${months[currMonth]} ${currYear}`; 
    if (currMonth==0) {
        document.getElementById('prev').innerText = months[11];
    }else{
        document.getElementById('prev').innerText = months[currMonth-1];
    }

    if (currMonth==11) {
        document.getElementById('next').innerText = months[0];
    }else{
        document.getElementById('next').innerText = months[currMonth+1];
    }
    daysTag.innerHTML = liTag;

    console.log(startdate, enddate);
    var xhr = new XMLHttpRequest();
            var url = '/month/call?startDate=' + startdate + '&endDate=' + enddate;
            xhr.open('GET', url, true);
            xhr.onreadystatechange = function() {
                if (xhr.readyState == 4 && xhr.status == 200) {

                    data = JSON.parse(xhr.responseText);

                        var divsWithIdStartingWithM = document.querySelectorAll('[id^="M"]');

                                    divsWithIdStartingWithM.forEach(function(li) {
                                        (data.Appointment).forEach( async element => {
                                            let calculateTimeDiff = new Date(element.start_date);

                                            let elementStartDate = new Date(element.start_date);
                                            let elementEndDate = new Date(element.end_date);

                                            // let currentDateTimezone = 

                                            elementStartDate.setTime(elementStartDate.getTime() - ((calculateTimeDiff.getTimezoneOffset())* 60 * 1000));
                                            elementEndDate.setTime(elementEndDate.getTime() - ((calculateTimeDiff.getTimezoneOffset())* 60 * 1000));


                                            let options = { timeStyle: 'short', hour12: true,  };
                                            let ticket=0;
                                            if('M'+elementStartDate.toISOString().slice(0,10) == li.id){                                              
                                                    let agent = await document.getElementById(element.agent_id+'M'+elementStartDate.toISOString().slice(0,10));
                                                    if(element.ticket_id != undefined){ticket=element.ticket_id}
                                                    agent.innerHTML += '#' + ticket  + element.subject ;
                                                    agent.title += element.site_name + "\n"+ element.subject + "\n" +elementStartDate.toLocaleTimeString('en-US', options) + " To " +  elementEndDate.toLocaleTimeString('en-US', options) + "\n";

                                            }


                                        });


                                    });
                }
            };
            xhr.send();

}
renderCalendar();

prevNextIcon.forEach(icon => { 
    icon.addEventListener("click", () => { 
        currMonth = icon.id === "prev" ? currMonth - 1 : currMonth + 1;



        if(currMonth < 0 || currMonth > 11) { 

            date = new Date(currYear, currMonth, new Date().getDate());
            currYear = date.getFullYear(); 
            currMonth = date.getMonth(); 
        } else {

            date = new Date(); 
        }

        renderCalendar();
        document.getElementById('Troy').checked = true;
        document.getElementById('Gerry').checked = true;
        document.getElementById('Esko').checked = true;
        document.getElementById('David').checked = true;
        document.getElementById('Chris').checked = true;
        document.getElementById('Christy').checked = true;
    });
});

document.addEventListener('DOMContentLoaded', function() {
   checkAgentCheckbox();
}, false);

function checkAgentCheckbox(){


document.getElementById('Gerry').addEventListener('change', function(event){
    var divsWithIdStartingWithM = document.querySelectorAll('[id^="24"]');
    if(!event.target.checked){
        divsWithIdStartingWithM.forEach(function(li){
            li.style.display = 'none';
        })
    }else{
        divsWithIdStartingWithM.forEach(function(li){
            li.style.display = 'inline';
        })
    }
});
document.getElementById('Troy').addEventListener('change', function(event){
    var divsWithIdStartingWithM = document.querySelectorAll('[id^="29"]');
    if(!event.target.checked){
        divsWithIdStartingWithM.forEach(function(li){
            li.style.display = 'none';
        })
    }else{
        divsWithIdStartingWithM.forEach(function(li){
            li.style.display = 'inline';
        })
    }
});
document.getElementById('Esko').addEventListener('change', function(event){
    var divsWithIdStartingWithM = document.querySelectorAll('[id^="27"]');
    if(!event.target.checked){
        divsWithIdStartingWithM.forEach(function(li){
            li.style.display = 'none';
        })
    }else{
        divsWithIdStartingWithM.forEach(function(li){
            li.style.display = 'inline';
        })
    }
});
document.getElementById('David').addEventListener('change', function(event){
    var divsWithIdStartingWithM = document.querySelectorAll('[id^="28"]');
    if(!event.target.checked){
        divsWithIdStartingWithM.forEach(function(li){
            li.style.display = 'none';
        })
    }else{
        divsWithIdStartingWithM.forEach(function(li){
            li.style.display = 'inline';
        })
    }
});
document.getElementById('Chris').addEventListener('change', function(event){
    var divsWithIdStartingWithM = document.querySelectorAll('[id^="22"]');
    if(!event.target.checked){
        divsWithIdStartingWithM.forEach(function(li){
            li.style.display = 'none';
        })
    }else{
        divsWithIdStartingWithM.forEach(function(li){
            li.style.display = 'inline';
        })
    }
});
document.getElementById('Christy').addEventListener('change', function(event){
    var divsWithIdStartingWithM = document.querySelectorAll('[id^="31"]');
    if(!event.target.checked){
        divsWithIdStartingWithM.forEach(function(li){
            li.style.display = 'none';
        })
    }else{
        divsWithIdStartingWithM.forEach(function(li){
            li.style.display = 'inline';
        })
    }
});
}



    </script>
  </body>
</html>